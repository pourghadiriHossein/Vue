var l=Object.defineProperty;var u=(o,a,e)=>a in o?l(o,a,{enumerable:!0,configurable:!0,writable:!0,value:e}):o[a]=e;var d=(o,a,e)=>(u(o,typeof a!="symbol"?a+"":a,e),e);import{a1 as i}from"./index.fc4d1fc7.js";class f{constructor(a,e,p,n,r){d(this,"id");d(this,"username");d(this,"email");d(this,"avatar");d(this,"password");this.id=a,this.username=e!=null?e:"",this.email=p!=null?p:"",this.avatar=n!=null?n:"",this.password=r!=null?r:""}static async register(a,e,p,n){const r=new FormData;r.append("name",a),r.append("email",e),r.append("password",p),r.append("avatar",n);const t=await i.post("api/register",r);if(t.status==200)return t;throw Error("Register Failed")}static async profile(){const a=await i.get("api/user/profile",{});if(a.status==200)return a;throw Error("Profile failed")}static async updateProfile(a,e,p,n,r){const t=new FormData;t.append("name",e),t.append("email",p),t.append("password",n),t.append("avatar",r);const s=await i.post(`api/update-my-profile/${a}`,t);if(s.status==200)return s;throw Error("Update Failed")}static async allUserForAdmin(a){const e=await i.get(`api/all-users?page=${a}`);if(e.status==200)return e;throw Error("Get All User For Admin Failed")}static async createUserByAdmin(a,e,p,n,r){const t=new FormData;t.append("name",a),t.append("email",e),t.append("password",p),t.append("avatar",n),t.append("role",r);const s=await i.post("api/create-user-by-admin",t);if(s.status==200)return s;throw Error("Created Failed")}static async updateUserByAdmin(a,e,p,n,r,t){const s=new FormData;s.append("name",e),s.append("email",p),s.append("password",n),s.append("avatar",r),s.append("role",t);const c=await i.post(`api/update-user-by-admin/${a}`,s);if(c.status==200)return c;throw Error("Created Failed")}static async deleteUserByAdmin(a){const e=await i.get(`api/delete-user-by-admin/${a}`);if(e.status==200)return e;throw Error("Delete User failed")}}export{f as U};
